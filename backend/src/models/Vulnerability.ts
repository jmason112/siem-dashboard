import mongoose from 'mongoose';

export interface IVulnerability {
  title: string;
  description: string;
  severity: 'critical' | 'high' | 'medium' | 'low';
  cvss_score: number;
  cve_id?: string;
  affected_component: string;
  affected_versions: string[];
  remediation: string;
  discovered_at: Date;
  status: 'open' | 'in_progress' | 'resolved' | 'false_positive';
  scan_source: string;
  asset_id: string;
  asset_type: string;
  tags: string[];
}

const vulnerabilitySchema = new mongoose.Schema<IVulnerability>({
  title: { type: String, required: true },
  description: { type: String, required: true },
  severity: { 
    type: String, 
    required: true,
    enum: ['critical', 'high', 'medium', 'low']
  },
  cvss_score: { type: Number, required: true },
  cve_id: String,
  affected_component: { type: String, required: true },
  affected_versions: [String],
  remediation: { type: String, required: true },
  discovered_at: { type: Date, default: Date.now },
  status: {
    type: String,
    required: true,
    enum: ['open', 'in_progress', 'resolved', 'false_positive'],
    default: 'open'
  },
  scan_source: { type: String, required: true },
  asset_id: { type: String, required: true },
  asset_type: { type: String, required: true },
  tags: [String]
}, {
  timestamps: true
});

export const Vulnerability = mongoose.model<IVulnerability>('Vulnerability', vulnerabilitySchema, 'vulnerabilities'); 